#!/bin/bash

CICD_HOME=/opt/cicd
WORKING_DIR=`pwd`

while getopts d:h option
do
case "${option}"
in
d) CICD_HOME=$OPTARG;;
h )
      echo "Usage:"
      echo "    configure -h           Display this help message"
      echo "    configure -d [dir]     CICD home (root) directory"
      exit 0
      ;;

esac
done


read -r -p "Configure CICD home direstory as $CICD_HOME? [y/N]: " response
 response=${response,,} # tolower
 if [ "$response" != "y" ]; then
    echo "Non-Error Exit (0) ..."
    exit 0
 fi
    echo "MAKE IT RAIN"
   echo "CICD_HOME=$CICD_HOME" > ".env"
# if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then

echo " ########## CREATING DIRECTORY STRUCTURE ########## "

echo "creating [jenkins] [home] directory [$CICD_HOME/jenkins/home]"
mkdir -p $CICD_HOME/jenkins/home

echo "creating [jenkins] [repo] directory [$CICD_HOME/repo]"
mkdir -p $CICD_HOME/repo

echo "creating [sprintbucket] [data] directory [$CICD_HOME/gitbucket/data"
mkdir -p $CICD_HOME/gitbucket/data

echo "creating [nexus] [data] directory [$CICD_HOME/nexus/data]"
mkdir -p $CICD_HOME/nexus/data

echo "creating [registry] home directory [$CICD_HOME/registry]"
mkdir -p $CICD_HOME/registry

echo "creating [sprintqube] [extensions] directory [$CICD_HOME/sonarqube/data]"
mkdir -p $CICD_HOME/sonarqube/extensions

echo "creating [sprintqube] [data] directory [$CICD_HOME/sonarqube/data]"
mkdir -p $CICD_HOME/sonarqube/data

echo " ########## BUILDING DOCKER IMAGES ########## "

if [[ -z $(docker images -q sprintkins:latest) ]]; then
	echo "does not exist, creating sprintkins"
	cd $WORKING_DIR/jenkins
	docker build -t sprintkins .
else
	echo "Image sprintkins exist, skipping build
	remove image sprintkins:latest to rebuild"
fi



if [[ -z $(docker images -q sprintgit:latest) ]]; then
	echo "does not exist, creating sprintgit"
	cd $WORKING_DIR/gitbucket
	docker build -t sprintgit .
else
	echo "Image sprintgit exist, skipping build
	remove image sprintgit:latest to rebuild"
fi



if [[ -z $(docker images -q google/cadvisor:latest) ]]; then
	echo "does not exist, pulling cAdvisor"
	docker pull google/cadvisor:latest
else 
	echo "Image cAdvisor  exist, skipping pull
	remove image google/cadvisor:latest pull again"
fi

if [[ -z $(docker images -q nginx:1.15.2) ]]; then
	echo "does not exist, pulling nginx:1.15.2"
	cd $WORKING_DIR/nginx
	docker build -t sprintngxn:latest .
else 
	echo "Image nginx:1.15.2  exist, skipping pull
	remove image nginx:1.15.2 pull again"
fi


if [[ -z $(docker images -q sprintqube:latest) ]]; then
	echo "does not exist, creating sonarqube:latest"
	cd $WORKING_DIR/sonarqube
	docker build -t sprintcube:latest .
else 
	echo "Image sonarqube:latest  exist, skipping pull
	remove image sonarqube:latest run configure again"
fi

echo " ########## RETURNING TO INSTALL DIRECTORY ########## "
cd $WORKING_DIR
